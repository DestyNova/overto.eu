<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Over to you</title><link>https://overto.eu/posts/</link><description>Recent content in Posts on Over to you</description><generator>Hugo -- gohugo.io</generator><language>en-ie</language><lastBuildDate>Wed, 26 Jul 2023 18:32:44 +0100</lastBuildDate><atom:link href="https://overto.eu/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Lenovo Ideapad 3 15ALC6 RAM upgrade: ignore the official docs</title><link>https://overto.eu/posts/lenovo-ideapad-3-15alc6-ram/</link><pubDate>Wed, 26 Jul 2023 18:32:44 +0100</pubDate><guid>https://overto.eu/posts/lenovo-ideapad-3-15alc6-ram/</guid><description>In late 2021 I picked up a Lenovo Ideapad 3 (15ALC6), a Ryzen 7 5700U-based laptop with 16GB RAM and a nice 1TB SSD. It was surprisingly cheap for what it offered, and after it went out of stock I tried to find another but it was either unobtainable or the price had gone way up.
Anyway, eventually I decided more RAM would be nice, since I was starting to hammer the SSD as swap.</description></item><item><title>Defold Android build issue: Problem parsing the package</title><link>https://overto.eu/posts/defold-problem-parsing-package/</link><pubDate>Wed, 05 Jul 2023 01:59:25 +0100</pubDate><guid>https://overto.eu/posts/defold-problem-parsing-package/</guid><description>While working on my first hobby gamedev project with Defold, I ran into an issue when trying to install the debug APK on my Android phone:
There was a problem parsing the package.
Searching the Defold forums and the web didn’t produce anything obviously relevant, so I looked at the sample project and tried to figure out what was different in the project settings. Most of the configuration was the same (that is to say, default), so I tried looking at the contents of the APK with unzip -l.</description></item><item><title>Rodland Intro Chords</title><link>https://overto.eu/posts/rodland-intro-chords/</link><pubDate>Fri, 02 Jun 2023 04:32:59 +0100</pubDate><guid>https://overto.eu/posts/rodland-intro-chords/</guid><description>I was watching cutscenes from the old arcade game &amp;#34;Rodland&amp;#34; and noticed a couple of chords with some nice voice leading.
I’m not sure I picked out all the notes, but here’s at least a partial transcription.</description></item><item><title>Benben</title><link>https://overto.eu/posts/benben/</link><pubDate>Sun, 30 Apr 2023 22:41:11 +0100</pubDate><guid>https://overto.eu/posts/benben/</guid><description>Today I was absolutely delighted to stumble upon a new command-line VGM (Video Game Music file) player called Benben. The author mentioned it in the Crystal programming language forum along with the underlying VGM playback library YunoSynth.
Benben is distributed as an executable AppImage file which worked perfectly out of the box on my Pop!_OS Linux system. Here’s a video of it playing the soundtrack to the PC-98 game &amp;#34;Rusty&amp;#34;:</description></item><item><title>BAM! and the history is gone</title><link>https://overto.eu/posts/bam-history/</link><pubDate>Tue, 18 Apr 2023 06:27:26 +0100</pubDate><guid>https://overto.eu/posts/bam-history/</guid><description>A few years ago I took this photo on Barrow Street near Ringsend, Dublin. BAM were tearing down some of the old Boland’s Mill site to make way for yet more shiny fancy corporate buildings. To be fair, they did repair some of the protected buildings which are part of the city’s heritage.
The graffiti quote is a pleasing reference to the catchphrase heard at the end of obnoxious &amp;#34;Cillit Bang&amp;#34; ads that used to run on UK and Irish TV:</description></item><item><title>Playing Revenant using Wine and Proton</title><link>https://overto.eu/posts/revenant-wine-proton/</link><pubDate>Sun, 16 May 2021 02:11:51 +0100</pubDate><guid>https://overto.eu/posts/revenant-wine-proton/</guid><description>TL;DR: I tried to run an old game called Revenant on Linux using both WINE and Proton, but both had problems. Here’s how I combined the powers of both to run the game on my Ubuntu machine.
Background The WINE project is an emulation layer that enables you to run a large amount of Windows programs on a Unix system. It can be difficult to configure, but it’s a fairly mature project that even supports some modern Windows games.</description></item><item><title>Living with dwm</title><link>https://overto.eu/posts/dwm-extras/</link><pubDate>Sat, 04 Apr 2020 17:19:11 +0100</pubDate><guid>https://overto.eu/posts/dwm-extras/</guid><description>You may have heard of tiling window managers like dwm or i3. These are pretty interesting from a nerdy elitist hacker perspective (&amp;#34;I know Unix!&amp;#34;), but can also look quite nice and make good use of on-screen space. I switched to dwm yesterday and enjoyed spending some time to figure out the absolute basics. On my old, small laptop though, I realised that it suits me best to just have a separate tag per application.</description></item><item><title>Jeff Schneider's Sick R&amp;B Chords</title><link>https://overto.eu/posts/jeff-schneider-sick-rnb-chords/</link><pubDate>Tue, 24 Jul 2018 22:17:52 +0100</pubDate><guid>https://overto.eu/posts/jeff-schneider-sick-rnb-chords/</guid><description>Jeff Schneider has some excellent instructive content on YouTube, and takes the time to explain some of the theory behind the music. Here, he plays a lush neo-soul chord progression, walks us through a nice tritone substitution and shows how we can use secondary dominants to introduce chords from outside the key.
Here’s a transcription, made much easier than usual thanks to Jeff’s animated keyboard.</description></item><item><title>Jazz chords from Paul Barton's "Piano Sounds Never Heard Before!"</title><link>https://overto.eu/posts/barton-piano-sounds-chords/</link><pubDate>Sun, 22 Jul 2018 18:07:44 +0100</pubDate><guid>https://overto.eu/posts/barton-piano-sounds-chords/</guid><description>There’s a really nice sequence of jazzy chords in Paul Barton’s YouTube video &amp;#34;Piano Sounds Never Heard Before!&amp;#34; at the 7:44 mark:
I really liked the chord progression and tried to transcribe it. You can find it here.</description></item></channel></rss>